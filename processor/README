1. A brief description of the project.
   sudo apt-get install graphviz
   dot ../out/out_t002.cpp.gv -Tpng -o ../out/out_dot.png

   UniversalIndentGUI
   sudo apt-get install universalindentgui
   indent -nbad -bap -nbc -bbo -bl -bli2 -bls -ncdb -nce -cp1 -cs -di2 -ndj -nfc1 -nfca -hnl -i2 -ip5 -lp -pcs -psl -nsc -nsob


useful commands:

  find . -name "*.cpp" -exec grep -EHn "\<c_decl_specifier\>" {} \;

  git commit --amend -C HEAD

	gedit Makefile parser_descent.cpp  parser_descent.h parser_descent_rules.cpp YACC_RULES_TODO
    kate Makefile parser_descent.cpp  parser_descent.h parser_descent_rules.cpp YACC_RULES_TODO semantic.cpp semantic.h symbols_table.h symbols_table.cpp
 -q -x X abidos
    ulimit -c unlimited

    valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes --max-stackframe=4020472 ./abidos --verbose test/mass_clases.cpp| grep -E "==\d=="
    valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes --max-stackframe=4020472 ./abidos --verbose test/test_symbols_table.h| grep -E "==\d=="

    ./$(EXECUTABLE)  test/$(FILE_TEST)

cat ../out/trace_t030.cpp.gv | dot -Tpng > ../out/trace_t030.cpp.gv.png; eog ../out/trace_t030.cpp.gv.png

git bundle create abidos_$(date '+%F_%H_%M')_master.bundle master
mv abidos_2011-04-14_15_06_master.bundle /home/hevia/Descargas/
cd /home/hevia/Descargas/working/abidos
git pull /home/hevia/Descargas/abidos_2011-04-14_15_06_master.bundle master

make clean
tar -czvf working_$(date '+%F_%H_%M').tar.gz working/
tar -xzvf working_2011-03-12_16_18.tar.gz

git commit -C HEAD -a --amend

dot ../out/out_test_symbols_table.h.gv -Tpng -o ../out/out_test_symbols_table.h.png
dot ../out/out_test_symbols_table.h.gv -Tsvg -o ../out/out_test_symbols_table.h.svg

2. A pointer to the project website (if it has one).
3. Notes on the developerâ€™s build environment and potential portability problems.
4. A roadmap describing important files and subdirectories.
5. Either build/installation instructions or a pointer to a file containing same (usually INSTALL).
6. Either a maintainers/credits list or a pointer to a file containing same (usually CREDITS).
7. Either recent project news or a pointer to a file containing same (usually NEWS).
8. Project mailing list addresses.

todo
  -[] clear context when class has been processed
  -[v] put other field to know when a type is a class or a struct
  -[]

	-[v] table of types first for class and structs.
	-[] continue with the work of the yacc rules to get class definitions.
	-[] refactor test in a class.

show includes todo
-[] class config_parameters do like abidos/processor/options.cpp 
-[] refactor code from main.cpp to the previous class.
-[] move code inside of abidos/preprocessor.
-[] parser will be invoke from preprocesso
    maybe the easy way is create a big file preprocesed with gcc

abidos
-[v] draft first version of types_table.
-[v] draft first version of symbol_table.
-[v] class B : A { ... put public by default
-[v] symbols_table.h do vector<c_decl_specifier> t_vector_decl_specifier
-[v] put members in previous vector inside his class
-[v] investigate
	int c_parser_descent::type_specifier(string tab)
	{
	...
	if( 1 == class_specifier(tab) )
	{
		//## bad idea i need investigate other way to do this
		//		context = context_tokens.restore();
		return 1;
	}

	maybe in the call of the rule, or restore all but i_token not

	fix->context_tokens.restore_but_not_i_token(context);

-[v] fixed parser more than 3 members in oneline inside a class
-[v] in members whe store in map and in a vector to have fast access
     and to have original order
-[] print members put empty in vector
-[v] implement parse of functions members
-[v] implement symbol save of parametes of functions members.
-[] implement parse of free functions
-[v] implement symbol save of parametes of free functions
-[v] in semantic i must work in put in correct point of code vector_decl_specifier.clear();
-[] generate orignal .cpp or .h with information from ts.
-[v] f(int, char) in ts must have "f(int,char)" string name in member map.
    we must save f and parameters in context and in the ')' put this in ts.
-[v] use
	http://www.gnu.org/s/libc/manual/html_node/Getopt-Long-Option-Example.html#Getopt-Long-Option-Example 
	to create options.h struct c_options with the argv[] passed to the program
-[v] save the file and the line in the c_token
-[v] improve click in members of clasess.
-[v] if a funcion member have parameters with only tipes -> show only types.
-[v] indent preprocessor
-[] indent show_includes
-[v] put level in the printf of rules
-[] use t_class_specifier_status c_context::class_specifier_status in parser and in semantic
    now there are several flags doing this
-[v] parse free variables.
-[v] parse free functions.
-[v] parse private public protected inside classes.
-[v] generate original with previous.
-[v] generate graph with -, + showing if a member is private/protected or public
-[v] parsing free functions with body
-[v] parsing member functions with body
-[] generate original declaration of variables
-[] generate original free functions
-[v] put head arrows of class with not fill (like in UML specification)
-[v] reverse the positions of class fathers and sons (father up in diagrams)
-[v] pass the body of functions (with a dummy rule)
-[v] parse constructors
-[v] parse destructors
-[v] use is_constructor
-[v] use is_destructor
-[v] parse AUTO|REGISTER...
-[v] parse INLINE|VIRTUAL...
-[v] parse FRIEND
-[] do script to check generate original ~= original
-[v] count oks and fails tests
-[v] parse definitions of functions members outside of classes
     void A::fa(void)
-[v] parse definitions of constructors outside of classes
-[v] parse definitions of destructors outside of classes
-[v] semantic for definitons of functions members outside of clasess.
-[v] save the file and line for the previous point.
-[] do get_full_name only with types of params 
    inside class A
        void f(int);
    outside class
        void A::f(int i){..}
-[v] constructors file outside of class
-[v] destructors file outside of class
-[v] parse '*' in declarations
-[v] parse '&' in declarations
      the 2 previous points has been done with ptr_specifier:
      i use this rule instead of prt_operator in some places
-[v] do new state to test/t022.cpp
    context.class_specifier_status 
    ...
      friend class A;
    ...
-[v] added to ts friends of classes
-[v] draw friend classes
-[v] draw compositions
-[v] draw aggregations
-[v] typedef parse typedef class A;
-[] typedef do create sinom in ts
-[v] use this fields
    int type_specifier;
    int function_specifier; <-- dropped
    int friend_specifier;   <-- dropped
    int typedef_specifier;  <-- dropped
    int has_colon_colon_after; // A:: ...
-[v] do c_parser_descent::cv_qualifier()
-[] do cv_qualifier_seq
-[v] refactor python output to can do:
    dot out/out_test_symbols_table.h.gv -Tpng -o out/out_test_symbols_table.h.png
-[v] typedef class A {} t_A;
-[v] reactive test 24.
-[v] change NO_CLASS_NAME for a tag sytem with number increment.
-[] draw typedefs like class with relation with his class type.
    t_A ---> class A
-[v] typedef t_int t2_int in ts t2_int should point to t_int.
-[v]  define classes inside classes.
-[v] parse thinks like this int A::A_2::A_2_1::A_2_1_f(int long p1){ }
-[-] refactor code from parser_descent to lexical_buffer
      for the moment i think is a litle bloat do this
-[v] in nodos names [out/out_run.py] A::A_2 changes for A__A_2
-[] change nodos names [out/out_run.py] A::A_2 changes for A__A_2 in compositions/aggreggations
-[] change nodos names [out/out_run.py] A::A_2 changes for A__A_2 in herences
-[v] in A::A_2::A_2_1::A_2_1_f it should search A_2_1_f in A::A_2::A_2_1
    ##: mark_x16 context.class_name_declaration [A::A_2::A_2_1]
    printf("##: mark_x17 context.class_name_declaration [%s]\n", context.class_name_declaration.c_str());
    i need further work here    
    maybe i can use semantic::vector_decl_specifier instead string parser_descent::colon_colon_chain;
    yes! that is;
-[v] change the trace system trace.*
-[v] code to generate tree calls of grammar trace.*
    cat out/trace_t001.cpp.gv | dot -Tpng > out/trace_t001.cpp.gv.png
-[v] imporve tree calls, now we can see the tokens consumed in the nodes.
-[v] do int token_is(int id, c_trace_node trace_node);
-[v] do int preanalisys(int id, c_trace_node trace_node);
-[v] this is confuse if ( ! token_is('(', trace_node) )
    maybe do if ( token_is_not('(', trace_node) )
-[v] fix trace.cpp put \\ only in characters what really need it
-[v] fix t017 jumping to funtions implementation to t029.cpp this purpouse.
-[v] fix t017 jumping to constructors definition t030.cpp created to this purpouse.
-[v] fix jumping destructors definition t030.cpp created to this purpouse.
-[v] t028 A::A_2::A_2_1::A_2_1() jumping to this...
-[v] t031 A::B::B() jumping to this...
-[v] t031 A::B::~B() dont show ~ in class graph
-[v] t032 before public: only the first is public in graph
    fixed partially when are not constructors/destructors with body in class
    cat out/trace_t032.cpp.gv | dot -Tpng > out/trace_t032.cpp.gv.png; eog out/trace_t032.cpp.gv.png
-[v] fix error in c_class_member * get(string member);
-[v] enhand preanalisys -> preanalisys_has_one passing vector to it.
-[v] t033 fix before A::A(){} class B{}; is parser as A::B
    cat out/trace_t033.cpp.gv | dot -Tpng > out/trace_t033.cpp.gv.png; eog out/trace_t033.cpp.gv.png
-[v] t027 typedef no name class soved with change NO_CLASS_NAME for a tag sytem with number increment.
-[v] prune decl_specifier '~' ';' t030 241_is_eof -> 227_is_eof
-[v] prune declarator ';' t030 227_is_eof -> 216_is_eof
-[v] do preprocessor
    http://www.taekwondo-wiki.com/2008/apidocs/flex-2.5.35.zip/flex_11.html#SEC15
    cat out/trace_t034.cpp.gv | dot -Tpng > out/trace_t034.cpp.gv.png; eog out/trace_t034.cpp.gv.png
    valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes --max-stackframe=4020472 ./abidos --verbose test/t034.cpp| grep -E "==\d=="
-[v] do preprocessor change pwd #include "h/h1.h" h1.h cand have #include "h2" in h directory
-[] do parsing templates <>
-[] do parsing [const]
-[] do parsing namespace
-[] do parsing using namespace_name
-[v] erase xdot2.pyc from history
    git filter-branch --index-filter 'git update-index --remove xdot2.pyc' 7dffeb6..HEAD
    git push --force --verbose --dry-run
    git push --force
-[v] in Makefile when does not exists create:
        mkdir out
        mkdir test_out
-[] pass file out in main parameter parser_descent yyparse()

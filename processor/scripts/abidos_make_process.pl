#!/usr/bin/perl -w
#
# autor:Manuel Hevia
# description: 
#
#-------------------------------------------
use strict;

use strict;
my $dir = '.abidos';

sub create_directories
{
  my @directories = ($dir);

  foreach (@directories) {
    print "  checking existence $_ ...";

    unless(-d $_){
        print "creating...";
        mkdir $_ or die "  Couldn't create dir: [$_]\n";
        print "[ok]\n";
    }
    else
    {
        print "[ok]\n";
    }
  }
}

sub generate_loader_file
{
  my $file_input_name = "make_out.txt";
  my $file_output_name = "$dir/files";
  
  open(f_in,"< $file_input_name") or die("error open < $file_input_name");
  my @raw_data=<f_in>;
  open(f_out,"> $file_output_name") or die("error open > $file_output_name");

  printf f_out "#\n";
  printf f_out "# generated by abidos\n";
  printf f_out "# this file is for the loader of abidos processor\n";
  printf f_out "#\n";

  foreach my $l (@raw_data) {
    chomp($l);
    $_= $l;

    my @directories = ();
    if( $_ =~ /^(g++|cc|c++)/ ) {
      if( $_ !~ /-c/ ) {
        next;
      }

#      printf f_out "#$_\n";
      #we are in a line like this:
      #g++ -Wall -c -g -I../includes trace.cpp
	    while ($_ =~ m/-I([\S]+)/g) {
	      my $d = $1;
	      if( $d =~ /\/$/) {
	        chop($d);
        }

        push(@directories, $d);
	    }

      if( $_ = /[^\-]([\S]+)\.(cpp|cc)/) {
        #../../preprocessor/ts.cpp:../../preprocessor:../includes:.
        my $file = $1.'.'.$2;
	      if ($file =~ m/([\S]+)\/([\S]+)\.(cpp|cc)/g) {
          push(@directories, $1);
          my $str = join(':', @directories);
          print f_out "$1/$2.$3:$str\n";
	      } else {
          my $str = join(':', @directories);
          print f_out "$1.$2:$str\n";
        }
      } else {
        print f_out "#no cpp file [$l]\n";
      }
    }
  }

  close(f_in);
  close(f_out);
}

sub process_project
{
  system ("cp /opt/abidos/xdot2.py .abidos/") == 0 or die "system failed: $?";
  system ("/opt/abidos/abidos --test_all_tokens_consumed_flag --no_std --loader .abidos/files") == 0 or die "system failed: $?";
#  system ("cp /opt/abidos/out_files.gv .abidos/" == 0) or die "system failed: $?";
  system ("cat /opt/abidos/out_begin.py > .abidos/out_run.py") == 0 or die "system failed: $?";
  system ("cat .abidos/out_files.gv >> .abidos/out_run.py") == 0 or die "system failed: $?";
  system ("cat /opt/abidos/out_end.py >> .abidos/out_run.py") == 0 or die "system failed: $?";
  system ("chmod +x .abidos/out_run.py") == 0 or die "system failed: $?";
  system (".abidos/out_run.py") == 0 or die "system failed: $?";
}

sub main
{
  my $num_args = $#ARGV;

  if ($num_args != 0) {
    print "\n no --debug mode\n";
  }

  create_directories();
  generate_loader_file();
  if ($num_args != 0) {
    process_project();
  }
}

main();
